# This config was automatically generated from your source code
# Stacks detected: cicd:jenkins:icam-expert-frontend,deps:node:icam-expert-frontend
version: 2.1
orbs:
    node: circleci/node@5
jobs:
    test-frontend:
        # Install node dependencies and run tests
        executor: node/default
        working_directory: ~/project/icam-expert-frontend
        steps:
            - checkout:
                  path: ~/project
            - node/install-packages:
                  pkg-manager: npm
            - run:
                  name: Run tests
                  command: npm test --passWithNoTests
    build-frontend:
        # Build node project
        executor: node/default
        working_directory: ~/project/icam-expert-frontend
        steps:
            - checkout:
                  path: ~/project
            - node/install-packages:
                  pkg-manager: npm
            - run:
                  command: npm run build
            - run:
                  name: Create the ~/artifacts directory if it doesn't exist
                  command: mkdir -p ~/artifacts
            # Copy output to artifacts dir
            - run:
                  name: Copy artifacts
                  command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
            - store_artifacts:
                  path: ~/artifacts
                  destination: frontend-build
    test-backend:
        # Install node dependencies and run tests
        executor: node/default
        working_directory: ~/project/icam-expert-backend
        steps:
            - checkout:
                  path: ~/project
            - node/install-packages:
                  pkg-manager: npm
            - run:
                  name: Run tests
                  command: npm test --passWithNoTests
    build-backend:
        # Build node project
        executor: node/default
        working_directory: ~/project/icam-expert-backend
        steps:
            - checkout:
                  path: ~/project
            - node/install-packages:
                  pkg-manager: npm
            - run:
                  command: npm run build
            - run:
                  name: Create the ~/artifacts directory if it doesn't exist
                  command: mkdir -p ~/artifacts
            # Copy output to artifacts dir
            - run:
                  name: Copy artifacts
                  command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
            - store_artifacts:
                  path: ~/artifacts
                  destination: backend-build
    build-push-docker:
        docker:
            - image: cimg/base:2024.05
              auth:
                  username: $DOCKERHUB_USERNAME
                  password: $DOCKERHUB_PASSWORD
        steps:
            - checkout
            - setup_remote_docker
            - restore_cache:
                  keys:
                      - v1-{{ .Branch }}
                  paths:
                      - /caches/app.tar
            - run:
                  name: Load Docker image layer cache
                  command: |
                      set +o pipefail
                      docker load -i /caches/app.tar | true
            - run:
                  name: Build and Push application Docker image
                  command: |
                      docker build -t $DOCKERHUB_USERNAME/icam-expert-app:latest .
                      echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
                      docker push $DOCKERHUB_USERNAME/icam-expert-app:latest
workflows:
    build-and-test:
        jobs:
            - test-frontend
            - build-frontend:
                  requires:
                      - test-frontend
            - test-backend
            - build-backend:
                  requires:
                      - test-backend
            - build-push-docker:
                  requires:
                      - build-frontend
                      - build-backend
                  # filters:
                  #     branches:
                  #         only:
                  #             - main
